"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2119],{19277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(74848),a=n(15680);const i={id:"dynamic_output",title:"BXL and Dynamic Outputs"},o=void 0,s={id:"developers/dynamic_output",title:"BXL and Dynamic Outputs",description:"Dynamic output",source:"@site/../docs/developers/bxl_dynamic_output.md",sourceDirName:"developers",slug:"/developers/dynamic_output",permalink:"/docs/developers/dynamic_output",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"dynamic_output",title:"BXL and Dynamic Outputs"},sidebar:"main",previous:{title:"BXL and Anonymous Targets",permalink:"/docs/developers/anon_targets"},next:{title:"FAQs",permalink:"/docs/developers/bxl_faqs"}},c={},l=[{value:"Dynamic output",id:"dynamic-output",level:2},{value:"Limitations",id:"limitations",level:3},{value:"Silly example",id:"silly-example",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"dynamic-output",children:"Dynamic output"}),"\n",(0,r.jsxs)(t.p,{children:["When declaring ",(0,r.jsx)(t.a,{href:"/docs/rule_authors/dynamic_dependencies",children:"dynamic outputs"})," within\na BXL script, the dynamic lambda for is created with a ",(0,r.jsx)(t.code,{children:"bxl_ctx"}),", which means\nthat you can do things like run analysis or queries to inspect the build graph\nfrom within the dynamic lambda."]}),"\n",(0,r.jsx)(t.p,{children:"You may declare multiple dynamic outputs within a single BXL script, or declare\nnested dynamic outputs. Dynamic outputs are run asynchronously after the BXL\nevaluation."}),"\n",(0,r.jsx)(t.h3,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"ctx.output"})," is not available from a dynamic lambda. This means you can\u2019t\nensure artifacts or print cached outputs within a dynamic lambda."]}),"\n",(0,r.jsx)(t.li,{children:"Error messages from skipping incompatible targets are only emitted to the\nconsole, and not cached in the stderr"}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"build()"})," is not available from a dynamic lambda"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"bxl_actions"})," in a dynamic lambda always inherits the execution platform\nresolution of the root/parent BXL.","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["The expected usage of ",(0,r.jsx)(t.code,{children:"bxl_actions"})," from within a dynamic lambda is to\ninstantiate it without any named parameters, but the ",(0,r.jsx)(t.code,{children:"exec_deps"})," and\n",(0,r.jsx)(t.code,{children:"toolchains"})," of the execution platform resolution are accessible, and return\nthe same values as the root/parent BXL"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"Profiling is not hooked up to dynamic BXL context"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"silly-example",children:"Silly example"}),"\n",(0,r.jsxs)(t.p,{children:["This is a silly example of creating a dynamic output which reads some\n",(0,r.jsx)(t.code,{children:"query_params"})," input, calls some BXL functions like ",(0,r.jsx)(t.code,{children:"uquery"}),",\n",(0,r.jsx)(t.code,{children:"configured_targets"})," to get the resolved attributes of a target node, and then\nwrites the attributes to an output file."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'def _impl_dynamic_output(ctx):\n    actions = ctx.bxl_actions().actions\n\n    # Declare some input here to read within the lambda\n    query_params = actions.write_json("query_params", {"rule_type": "apple_bundle", "universe": "fbcode//buck2/tests/..."})\n\n    # Dynamic lambda\'s output artifact\n    resolved_attrs = actions.declare_output("resolved_attrs")\n\n    # Dynamic lambda function to be used in the dynamic_output\n    def my_deferred(ctx, artifacts, outputs):\n\n        # Read the input, then do some BXL things here\n\n        params = artifacts[query_params].read_json()\n        target = ctx.uquery().kind(params["rule_type"], params["universe"])[0]\n        node = ctx.configured_targets(target.label)\n        eager_attrs = node.resolved_attrs_eager(ctx)\n\n        # Dynamic BXL context\'s `bxl_actions` does not take in named parameters because it inherits the exec platform resolution from the root/parent BXL. If the root BXL\'s `bxl_actions` were created with exec deps/toolchains, you can access them using `exec_deps` and `toolchains` attributes here\n\n        ctx.bxl_actions().actions.write(outputs[resolved_attrs], str(eager_attrs))\n\n    actions.dynamic_output(\n        dynamic = [query_params],\n        inputs = [],\n        outputs = [\n            resolved_attrs,\n        ],\n        f = my_deferred,\n    )\n\n    ctx.output.print(ctx.output.ensure(resolved_attrs).abs_path())\n\ndynamic_output_example = bxl_main(\n    impl = _impl_dynamic_output,\n    cli_args = {\n    },\n)\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.useMDXComponents)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>l,MDXProvider:()=>p,mdx:()=>f,useMDXComponents:()=>d,withMDXComponents:()=>u});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){return function(t){var n=d(t.components);return r.createElement(e,i({},t,{components:n}))}},d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),p=a,m=u["".concat(o,".").concat(p)]||u[p]||h[p]||i;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);