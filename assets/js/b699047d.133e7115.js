"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6828],{89980:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=n(74848),o=n(15680),a=n(28774);const s={},i="DefaultInfo",l={id:"api/build/DefaultInfo",title:"DefaultInfo",description:"A provider that all rules' implementations must return",source:"@site/../docs/api/build/DefaultInfo.md",sourceDirName:"api/build",slug:"/api/build/DefaultInfo",permalink:"/docs/api/build/DefaultInfo",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ConstraintValueInfo",permalink:"/docs/api/build/ConstraintValueInfo"},next:{title:"Dependency",permalink:"/docs/api/build/Dependency"}},c={},u=[{value:"DefaultInfo.default_outputs",id:"defaultinfodefault_outputs",level:2},{value:"DefaultInfo.other_outputs",id:"defaultinfoother_outputs",level:2},{value:"DefaultInfo.sub_targets",id:"defaultinfosub_targets",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"defaultinfo",children:"DefaultInfo"})}),"\n",(0,r.jsx)(t.p,{children:"A provider that all rules' implementations must return"}),"\n",(0,r.jsx)(t.p,{children:"In many simple cases, this can be inferred for the user."}),"\n",(0,r.jsx)(t.p,{children:"Example of a rule's implementation function and how these fields are used by the framework:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-starlark",children:'# //foo_binary.bzl\ndef impl(ctx):\n    ctx.action.run([ctx.attrs._cc[RunInfo], "-o", ctx.attrs.out.as_output()] + ctx.attrs.srcs)\n    ctx.action.run([\n        ctx.attrs._strip[RunInfo],\n        "--binary",\n        ctx.attrs.out,\n        "--stripped-out",\n        ctx.attrs.stripped.as_output(),\n        "--debug-symbols-out",\n        ctx.attrs.debug_info.as_output(),\n    ])\n    return [\n        DefaultInfo(\n            sub_targets = {\n                "stripped": [\n                    DefaultInfo(default_outputs = [ctx.attrs.stripped, ctx.attrs.debug_info]),\n                ],\n            },\n            default_output = ctx.attrs.out,\n    ]\n\nfoo_binary = rule(\n    impl=impl,\n    attrs={\n        "srcs": attrs.list(attrs.source()),\n        "out": attrs.output(),\n        "stripped": attrs.output(),\n        "debug_info": attrs.output(),\n        "_cc": attrs.dep(default="//tools:cc", providers=[RunInfo]),\n        "_strip_script": attrs.dep(default="//tools:strip", providers=[RunInfo])\n)\n\ndef foo_binary_wrapper(name, srcs):\n    foo_binary(\n        name = name,\n        srcs = src,\n        out = name,\n        stripped = name + ".stripped",\n        debug_info = name + ".debug_info",\n    )\n\n# //subdir/BUCK\nload("//:foo_binary.bzl", "foo_binary_wrapper")\n\ngenrule(name = "gen_stuff", ...., default_outs = ["foo.cpp"])\n\n# ":gen_stuff" pulls the default_outputs for //subdir:gen_stuff\nfoo_binary_wrapper(name = "foo", srcs = glob(["*.cpp"]) + [":gen_stuff"])\n\n# Builds just \'foo\' binary. The strip command is never invoked.\n$ buck build //subdir:foo\n\n# builds the \'foo\' binary, because it is needed by the \'strip\' command. Ensures that\n# both the stripped binary and the debug symbols are built.\n$ buck build //subdir:foo[stripped]\n'})}),"\n",(0,r.jsx)(t.h2,{id:"defaultinfodefault_outputs",children:"DefaultInfo.default_outputs"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["DefaultInfo.default_outputs: list[",(0,r.jsx)(a.default,{to:"/docs/api/build/Artifact",children:"artifact"}),"]"]})}),"\n",(0,r.jsxs)(t.p,{children:["A list of ",(0,r.jsx)(t.code,{children:"Artifact"}),"s that are built by default if this rule is requested explicitly (via CLI or ",(0,r.jsx)(t.code,{children:"$(location)"}),' etc), or depended on as as a "source" (i.e., ',(0,r.jsx)(t.code,{children:"attrs.source()"}),")."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"defaultinfoother_outputs",children:"DefaultInfo.other_outputs"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["DefaultInfo.other_outputs: list[",(0,r.jsx)(a.default,{to:"/docs/api/build/CellPath",children:"CellPath"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/Artifact",children:"artifact"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/CellRoot",children:"cell_root"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/cmd_args",children:"cmd_args"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/Label",children:"label"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/OutputArtifact",children:"output_artifact"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/ProjectRoot",children:"project_root"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/ResolvedStringWithMacros",children:"resolved_macro"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})," | tagged_command_line | ",(0,r.jsx)(a.default,{to:"/docs/api/build/TargetLabel",children:"target_label"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/build/TransitiveSetArgsProjection",children:"transitive_set_args_projection"})," | write_json_cli_args | RunInfo]"]})}),"\n",(0,r.jsxs)(t.p,{children:["A list of ",(0,r.jsx)(t.code,{children:"ArtifactTraversable"}),". The underlying ",(0,r.jsx)(t.code,{children:"Artifact"}),"s they define will be built by default if this rule is requested (via CLI or ",(0,r.jsx)(t.code,{children:"$(location)"})," etc), but ",(0,r.jsx)(t.em,{children:"not"}),' when it\'s depended on as as a "source" (i.e., ',(0,r.jsx)(t.code,{children:"attrs.source()"}),"). ",(0,r.jsx)(t.code,{children:"ArtifactTraversable"})," can be an ",(0,r.jsx)(t.code,{children:"Artifact"})," (which yields itself), or ",(0,r.jsx)(t.code,{children:"cmd_args"}),", which expand to all their inputs."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"defaultinfosub_targets",children:"DefaultInfo.sub_targets"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["DefaultInfo.sub_targets: dict[",(0,r.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"}),", ",(0,r.jsx)(a.default,{to:"/docs/api/build/ProviderCollection",children:"provider_collection"}),"]"]})}),"\n",(0,r.jsxs)(t.p,{children:["A mapping of names to ",(0,r.jsx)(t.code,{children:"ProviderCollection"}),"s. The keys are used when resolving the ",(0,r.jsx)(t.code,{children:"ProviderName"})," portion of a ",(0,r.jsx)(t.code,{children:"ProvidersLabel"})," in order to access the providers for a subtarget, such as when doing ",(0,r.jsx)(t.code,{children:"buck2 build cell//foo:bar[baz]"}),". Just like any ",(0,r.jsx)(t.code,{children:"ProviderCollection"}),", this collection must include at least a ",(0,r.jsx)(t.code,{children:"DefaultInfo"})," provider. The subtargets can have their own subtargets as well, which can be accessed by chaining them, e.g.: ",(0,r.jsx)(t.code,{children:"buck2 build cell//foo:bar[baz][qux]"}),"."]})]})}function f(e={}){const{wrapper:t}={...(0,o.useMDXComponents)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>f,mdx:()=>m,useMDXComponents:()=>d,withMDXComponents:()=>u});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){return function(t){var n=d(t.components);return r.createElement(e,a({},t,{components:n}))}},d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),f=o,p=u["".concat(s,".").concat(f)]||u[f]||h[f]||a;return n?r.createElement(p,i(i({ref:t},c),{},{components:n})):r.createElement(p,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);