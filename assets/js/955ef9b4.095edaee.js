"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2386],{51443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(74848),r=t(15680);const s={id:"visibility",title:"Visibility"},a=void 0,o={id:"concepts/visibility",title:"Visibility",description:"Visibility determines whether a target can reference",source:"@site/../docs/concepts/visibility.md",sourceDirName:"concepts",slug:"/concepts/visibility",permalink:"/docs/concepts/visibility",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"visibility",title:"Visibility"},sidebar:"main",previous:{title:"buck-out",permalink:"/docs/concepts/buck_out"},next:{title:"Daemon (buckd)",permalink:"/docs/concepts/daemon"}},l={},c=[{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.useMDXComponents)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Visibility determines whether a ",(0,i.jsx)(n.a,{href:"/docs/concepts/glossary#target",children:"target"})," can reference\nanother target in its ",(0,i.jsx)(n.a,{href:"/docs/concepts/glossary#attribute",children:"attributes"}),". In a large project,\nyou may want to prevent developers from 'reaching across' the project and\npulling in additional code. Reducing the visibility of targets can help prevent\nthat type of behavior."]}),"\n",(0,i.jsxs)(n.p,{children:["There are two types of visibility attributes available (each of which takes a\nlist of ",(0,i.jsx)(n.a,{href:"/docs/concepts/glossary#target-pattern",children:"target patterns"}),"):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"visibility"})," - determines which other targets can depend on a target."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"within_view"})," - determines which other targets a target can depend on."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Both attributes act as allowlists, with some exceptions. In general, if a target\nis not listed, there may be no dependency relationship. If the ",(0,i.jsx)(n.code,{children:"within_view"}),"\nlist is empty or unset, however, its check is bypassed. Similarly, targets\ndefined in the same ",(0,i.jsx)(n.a,{href:"/docs/concepts/glossary#buck-file",children:"BUCK file"})," always act as if they\nwere members of their siblings' ",(0,i.jsx)(n.code,{children:"visibility"})," lists."]}),"\n",(0,i.jsxs)(n.p,{children:["There is also a special value for ",(0,i.jsx)(n.code,{children:"visibility"})," attribute: ",(0,i.jsx)(n.code,{children:"'PUBLIC'"}),", which\nmakes a build rule visible to all targets."]}),"\n",(0,i.jsxs)(n.p,{children:["In case of logically-conflicting lists, ",(0,i.jsx)(n.code,{children:"within_view"})," takes precedence over\n",(0,i.jsx)(n.code,{children:"visibility"}),". If ",(0,i.jsx)(n.code,{children:"//foo:bar"})," defines ",(0,i.jsx)(n.code,{children:"//hello:world"})," in its ",(0,i.jsx)(n.code,{children:"visibility"})," list,\nbut ",(0,i.jsx)(n.code,{children:"//hello:world"})," does not define ",(0,i.jsx)(n.code,{children:"//foo:bar"})," in its ",(0,i.jsx)(n.code,{children:"within_view"})," list, then\n",(0,i.jsx)(n.code,{children:"//hello:world"})," may not depend on ",(0,i.jsx)(n.code,{children:"//foo:bar"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.p,{children:"A common library like Guava should be able to be included by any build rule:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"prebuilt_jar(\n  name = 'guava',\n  binary_jar = 'guava-14.0.1.jar',\n  visibility = ['PUBLIC']\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"It is common to restrict the visibility of Android resources to the Java code\nthat uses it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"android_resource(\n  name = 'ui_res',\n  res = 'res',\n  package = 'com.example',\n  visibility = ['//java/com/example/ui:ui']\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or it may be simpler to make it visible to the entire directory in case\nadditional build rules are added to ",(0,i.jsx)(n.code,{children:"java/com/example/ui/BUCK"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"android_resource(\n  name = 'ui_res',\n  res = 'res',\n  package = 'com.example',\n  visibility = ['//java/com/example/ui:']\n)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Also, it is common to limit code for testing to be visible only to tests. If you\ndefine all of your Java unit tests in a folder named ",(0,i.jsx)(n.code,{children:"javatests/"})," in the root of\nyour project, then you could define the following rule to ensure that only build\nrules under ",(0,i.jsx)(n.code,{children:"javatests/"})," can depend on JUnit:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"prebuilt_jar(\n  name = 'junit',\n  binary_jar = 'junit-4.11.jar',\n  visibility = ['//javatests/...']\n)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Finally, restricting the view of a target can be useful for preventing\ndependency creep:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"java_library(\n  name = 'example',\n  visibility = ['PUBLIC',],\n  within_view = ['//foo:bar','//hello:world']\n)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.useMDXComponents)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>c,MDXProvider:()=>u,mdx:()=>f,useMDXComponents:()=>p,withMDXComponents:()=>d});var i=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(){return s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},s.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),d=function(e){return function(n){var t=p(n.components);return i.createElement(e,s({},n,{components:t}))}},p=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(c.Provider,{value:n},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},b=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,h=d["".concat(a,".").concat(u)]||d[u]||m[u]||s;return t?i.createElement(h,o(o({ref:n},c),{},{components:t})):i.createElement(h,o({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=b;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[h]="string"==typeof e?e:r,a[1]=o;for(var c=2;c<s;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);