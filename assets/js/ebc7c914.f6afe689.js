"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5367],{49106:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=t(74848),i=t(15680),a=t(28774);const s={},o="int",c={id:"api/starlark/int",title:"int",description:"def int(",source:"@site/../docs/api/starlark/int.md",sourceDirName:"api/starlark",slug:"/api/starlark/int",permalink:"/docs/api/starlark/int",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"float",permalink:"/docs/api/starlark/float"},next:{title:"json",permalink:"/docs/api/starlark/json"}},l={},d=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"int",children:"int"})}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def int(\na: ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/bool",children:"bool"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/float",children:"float"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})," | ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/str",children:"str"})," = ...,\n/,\nbase: ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})," = ...,\n) -> ",(0,r.jsx)(a.default,{to:"/docs/api/starlark/int",children:"int"})]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/bazelbuild/starlark/blob/master/spec.md#int",children:"int"}),": convert a value to integer."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"int(x[, base])"})," interprets its argument as an integer."]}),"\n",(0,r.jsxs)(n.p,{children:["If x is an ",(0,r.jsx)(n.code,{children:"int"}),", the result is x.\nIf x is a ",(0,r.jsx)(n.code,{children:"float"}),", the result is the integer value nearest to x,\ntruncating towards zero; it is an error if x is not finite (",(0,r.jsx)(n.code,{children:"NaN"}),",\n",(0,r.jsx)(n.code,{children:"+Inf"}),", ",(0,r.jsx)(n.code,{children:"-Inf"}),").\nIf x is a ",(0,r.jsx)(n.code,{children:"bool"}),", the result is 0 for ",(0,r.jsx)(n.code,{children:"False"})," or 1 for ",(0,r.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["If x is a string, it is interpreted like a string literal;\nan optional base prefix (",(0,r.jsx)(n.code,{children:"0"}),", ",(0,r.jsx)(n.code,{children:"0b"}),", ",(0,r.jsx)(n.code,{children:"0B"}),", ",(0,r.jsx)(n.code,{children:"0x"}),", ",(0,r.jsx)(n.code,{children:"0X"}),") determines which\nbase to use. The string may specify an arbitrarily large integer,\nwhereas true integer literals are restricted to 64 bits.\nIf a non-zero ",(0,r.jsx)(n.code,{children:"base"})," argument is provided, the string is interpreted\nin that base and no base prefix is permitted; the base argument may\nspecified by name."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"int()"})," with no arguments returns 0."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"int() == 0\nint(1) == 1\nint(False) == 0\nint(True) == 1\nint('1') == 1\nint('16') == 16\nint('16', 10) == 16\nint('16', 8) == 14\nint('16', 16) == 22\nint(0.0) == 0\nint(3.14) == 3\nint(-12345.6789) == -12345\nint(2e9) == 2000000000\nint(\"hello\")   # error: Cannot parse\nint(float(\"nan\"))   # error: cannot be represented as exact integer\nint(float(\"inf\"))   # error: cannot be represented as exact integer\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.useMDXComponents)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>l,MDXProvider:()=>u,mdx:()=>j,useMDXComponents:()=>p,withMDXComponents:()=>d});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){return function(n){var t=p(n.components);return r.createElement(e,a({},n,{components:t}))}},p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},f="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},x=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,f=d["".concat(s,".").concat(u)]||d[u]||h[u]||a;return t?r.createElement(f,o(o({ref:n},l),{},{components:t})):r.createElement(f,o({ref:n},l))}));function j(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=x;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[f]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}x.displayName="MDXCreateElement"}}]);