"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8049],{85177:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>d,metadata:()=>i,toc:()=>s});var r=n(74848),a=n(15680),o=n(28774);const d={},l="UnconfiguredTargetNode",i={id:"api/bxl/UnconfiguredTargetNode",title:"UnconfiguredTargetNode",description:"Methods for unconfigured target node.",source:"@site/../docs/api/bxl/UnconfiguredTargetNode.md",sourceDirName:"api/bxl",slug:"/api/bxl/UnconfiguredTargetNode",permalink:"/docs/api/bxl/UnconfiguredTargetNode",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"TargetUniverse",permalink:"/docs/api/bxl/TargetUniverse"},next:{title:"UnconfiguredTargetSet",permalink:"/docs/api/bxl/UnconfiguredTargetSet"}},c={},s=[{value:"UnconfiguredTargetNode.attrs",id:"unconfiguredtargetnodeattrs",level:2},{value:"UnconfiguredTargetNode.buildfile_path",id:"unconfiguredtargetnodebuildfile_path",level:2},{value:"UnconfiguredTargetNode.deps",id:"unconfiguredtargetnodedeps",level:2},{value:"UnconfiguredTargetNode.get_attr",id:"unconfiguredtargetnodeget_attr",level:2},{value:"UnconfiguredTargetNode.get_attrs",id:"unconfiguredtargetnodeget_attrs",level:2},{value:"UnconfiguredTargetNode.has_attr",id:"unconfiguredtargetnodehas_attr",level:2},{value:"UnconfiguredTargetNode.label",id:"unconfiguredtargetnodelabel",level:2},{value:"UnconfiguredTargetNode.oncall",id:"unconfiguredtargetnodeoncall",level:2},{value:"UnconfiguredTargetNode.rule_kind",id:"unconfiguredtargetnoderule_kind",level:2},{value:"UnconfiguredTargetNode.rule_type",id:"unconfiguredtargetnoderule_type",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"unconfiguredtargetnode",children:"UnconfiguredTargetNode"})}),"\n",(0,r.jsx)(t.p,{children:"Methods for unconfigured target node."}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodeattrs",children:"UnconfiguredTargetNode.attrs"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsx)("code",{children:"UnconfiguredTargetNode.attrs: typing.Any"})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the coerced attributes from the unconfigured target node. Returns a struct. Right now, it is not recommended to use this method. Instead, use ",(0,r.jsx)(t.code,{children:"get_attr"})," and ",(0,r.jsx)(t.code,{children:"get_attrs"})," methods. We will deprecate this method in the future."]}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_attributes(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.attrs.my_attr)\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodebuildfile_path",children:"UnconfiguredTargetNode.buildfile_path"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["UnconfiguredTargetNode.buildfile_path: ",(0,r.jsx)(o.default,{to:"/docs/api/bxl/FileNode",children:"bxl.FileNode"})]})}),"\n",(0,r.jsx)(t.p,{children:"Gets the buildfile path from the unconfigured target node."}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_label(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.buildfile_path)\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodedeps",children:"UnconfiguredTargetNode.deps"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def UnconfiguredTargetNode.deps(\n) -> list[",(0,r.jsx)(o.default,{to:"/docs/api/build/TargetLabel",children:"target_label"}),"]"]})}),"\n",(0,r.jsxs)(t.p,{children:["Gets all deps for this target. The result is a list of ",(0,r.jsx)(t.code,{children:"UnconfiguredTargetLabel"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_get_deps(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.deps())\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodeget_attr",children:"UnconfiguredTargetNode.get_attr"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def UnconfiguredTargetNode.get_attr(\nkey: ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"}),",\n/,\n)"]})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the attribute from the unconfigured target node. If the attribute is unset, returns the default value. If the attribute is not defined by the rule, returns ",(0,r.jsx)(t.code,{children:"None"}),". It will not return special attribute (attribute that start with 'buck.' in `buck2 uquery -A`` command)."]}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"def _impl_attributes(ctx):\n    target_node = ctx.uquery().eval(\"//foo:bar\")[0]\n    ctx.output.print(target_node.get_attr('my_attr'))\n"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodeget_attrs",children:"UnconfiguredTargetNode.get_attrs"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def UnconfiguredTargetNode.get_attrs(\n) -> dict[",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"}),", typing.Any]"]})}),"\n",(0,r.jsx)(t.p,{children:"Gets the all attributes (not include speical attributes) from the unconfigured target node. For attributes that are not explicitly set, the default value is returned."}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_attributes(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.get_attrs())\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodehas_attr",children:"UnconfiguredTargetNode.has_attr"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["def UnconfiguredTargetNode.has_attr(\nkey: ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"}),",\n/,\n) -> ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/bool",children:"bool"})]})}),"\n",(0,r.jsx)(t.p,{children:"Check if rule has the attribute."}),"\n",(0,r.jsxs)(t.p,{children:["Known attribute is always set explicitly or to default value\n(otherwise target would not be created)\nFor special attributes, it will return ",(0,r.jsx)(t.code,{children:"False"})]}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"def _impl_attributes(ctx):\n    target_node = ctx.uquery().eval(\"//foo:bar\")[0]\n    ctx.output.print(target_node.has_attr('my_attr'))\n"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodelabel",children:"UnconfiguredTargetNode.label"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["UnconfiguredTargetNode.label: ",(0,r.jsx)(o.default,{to:"/docs/api/build/TargetLabel",children:"target_label"})]})}),"\n",(0,r.jsx)(t.p,{children:"Gets the label from the unconfigured target node."}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_label(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.label)\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnodeoncall",children:"UnconfiguredTargetNode.oncall"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["UnconfiguredTargetNode.oncall: None | ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the target's special attr ",(0,r.jsx)(t.code,{children:"oncall"})]}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_get_oncall(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.oncall)\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnoderule_kind",children:"UnconfiguredTargetNode.rule_kind"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["UnconfiguredTargetNode.rule_kind: ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,r.jsx)(t.p,{children:"Gets the targets' corresponding rule's kind which is one of - normal (with no special properties) - configured (usable in a configuration context) - toolchain (only usable as a toolchain dep)"}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_rule_kind(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.rule_kind)\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"unconfiguredtargetnoderule_type",children:"UnconfiguredTargetNode.rule_type"}),"\n",(0,r.jsx)("pre",{class:"language-python",children:(0,r.jsxs)("code",{children:["UnconfiguredTargetNode.rule_type: ",(0,r.jsx)(o.default,{to:"/docs/api/starlark/str",children:"str"})]})}),"\n",(0,r.jsx)(t.p,{children:"Gets the fully qualified name of the rule for this unconfigured target node as a string. This includes the import path as well."}),"\n",(0,r.jsx)(t.p,{children:"Sample usage:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:'def _impl_rule_type(ctx):\n    target_node = ctx.uquery().eval("//foo:bar")[0]\n    ctx.output.print(target_node.rule_type)\n'})})]})}function g(e={}){const{wrapper:t}={...(0,a.useMDXComponents)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>g,mdx:()=>x,useMDXComponents:()=>u,withMDXComponents:()=>s});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){return function(t){var n=u(t.components);return r.createElement(e,o({},t,{components:n}))}},u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=u(n),g=a,p=s["".concat(d,".").concat(g)]||s[g]||h[g]||o;return n?r.createElement(p,l(l({ref:t},c),{},{components:n})):r.createElement(p,l({ref:t},c))}));function x(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,d=new Array(o);d[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,d[1]=l;for(var c=2;c<o;c++)d[c]=n[c];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);