"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9958],{36157:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});var l=r(74848),i=r(15680);const c={},a="Package-local values",t={id:"rfcs/package-local-values",title:"Package-local values",description:"This RFC proposes to extend buck2 Starlark with package-local values.",source:"@site/../docs/rfcs/package-local-values.md",sourceDirName:"rfcs",slug:"/rfcs/package-local-values",permalink:"/docs/rfcs/package-local-values",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},s={},o=[{value:"Why",id:"why",level:2},{value:"What we have now",id:"what-we-have-now",level:2},{value:"API",id:"api",level:2},{value:"<code>PACKAGE</code> files",id:"package-files",level:3},{value:"API",id:"api-1",level:3},{value:"<code>PACKAGE</code> file API",id:"package-file-api",level:4},{value:"<code>BUCK</code> file API",id:"buck-file-api",level:4},{value:"<code>read_config</code>",id:"read_config",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.useMDXComponents)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"package-local-values",children:"Package-local values"})}),"\n",(0,l.jsx)(n.p,{children:"This RFC proposes to extend buck2 Starlark with package-local values."}),"\n",(0,l.jsx)(n.h2,{id:"why",children:"Why"}),"\n",(0,l.jsx)(n.p,{children:"DevX people want to have some per-directory configuration files, accessible from\nStarlark macros."}),"\n",(0,l.jsx)(n.p,{children:"For example, a project NNN may want to switch to building using LLVM 15 by\ndefault. End users would want to have an easy instruction how to do that, after\nDevX people provided instructions and infrastructure for that."}),"\n",(0,l.jsx)(n.h2,{id:"what-we-have-now",children:"What we have now"}),"\n",(0,l.jsxs)(n.p,{children:["Currently, in fbcode, we have ",(0,l.jsx)(n.code,{children:"get_modes"})," mechanism."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"get_modes"})," symbol is registered in per-package implicit symbols,\n",(0,l.jsx)(n.a,{href:"https://fburl.com/code/7ud7e3ci",children:"here"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["This symbol can be accessed from macros using\n",(0,l.jsx)(n.a,{href:"https://fburl.com/code/u5coj9s7",children:"implicit_package_symbol"})," function."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"get_modes"})," functions are package-local, but all ",(0,l.jsx)(n.code,{children:"BUILD_MODE.bzl"})," files need to\nbe registered in global buckconfig, which is not ideal."]}),"\n",(0,l.jsxs)(n.p,{children:["Proposed per-package properties can replace ",(0,l.jsx)(n.code,{children:"get_modes"})," mechanism."]}),"\n",(0,l.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,l.jsxs)(n.h3,{id:"package-files",children:[(0,l.jsx)(n.code,{children:"PACKAGE"})," files"]}),"\n",(0,l.jsxs)(n.p,{children:["Before evaluating ",(0,l.jsx)(n.code,{children:"BUCK"})," file, buck2 will evaluate all ",(0,l.jsx)(n.code,{children:"PACKAGE"})," files in the\nsame directory and all parent directories. Absent ",(0,l.jsx)(n.code,{children:"PACKAGE"})," files are treated as\nempty files."]}),"\n",(0,l.jsxs)(n.p,{children:["All relevant ",(0,l.jsx)(n.code,{children:"PACKAGE"})," files are executed sequentially from the root directory\nto the current directory (but unrelated ",(0,l.jsx)(n.code,{children:"PACKAGE"})," files can be executed in\nparallel). Evaluating ",(0,l.jsx)(n.code,{children:"PACKAGE"})," files sequentially provides additional\nguarantees, for example, attempt to override a property (unless explicitly\nrequested) should fail with Starlark call stack."]}),"\n",(0,l.jsxs)(n.p,{children:["Each ",(0,l.jsx)(n.code,{children:"PACKAGE"})," file is evaluated at most once (like ",(0,l.jsx)(n.code,{children:"bzl"})," file)."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"PACKAGE"})," files may load arbitrary ",(0,l.jsx)(n.code,{children:"bzl"})," files. ",(0,l.jsx)(n.code,{children:"BUCK"}),"-specific functions called\nin ",(0,l.jsx)(n.code,{children:"bzl"})," files (like rule functions) are available, but calling functions from\n",(0,l.jsx)(n.code,{children:"PACKAGE"})," files is an error. This way, ",(0,l.jsx)(n.code,{children:"bzl"})," files are evaluated only once\nregardless of whether they are loaded from ",(0,l.jsx)(n.code,{children:"PACKAGE"})," or ",(0,l.jsx)(n.code,{children:"BUCK"})," file."]}),"\n",(0,l.jsx)(n.h3,{id:"api-1",children:"API"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"PACKAGE"})," files have a global function:"]}),"\n",(0,l.jsxs)(n.h4,{id:"package-file-api",children:[(0,l.jsx)(n.code,{children:"PACKAGE"})," file API"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'def write_package_value(\n    name: str,\n    value: "",\n    overwrite: bool = False,\n): ...\n'})}),"\n",(0,l.jsx)(n.p,{children:"Name is a string which must contain exactly one dot symbol (just to enforce code\nstyle)."}),"\n",(0,l.jsx)(n.p,{children:"Value is an arbitrary Starlark value, for example, an integer, a list of\ninteger, a struct or a function."}),"\n",(0,l.jsxs)(n.p,{children:["When ",(0,l.jsx)(n.code,{children:"overwrite"})," is ",(0,l.jsx)(n.code,{children:"False"})," (default), attempt to overwrite per-package value\ndefined in parent ",(0,l.jsx)(n.code,{children:"PACKAGE"})," file will fail."]}),"\n",(0,l.jsxs)(n.p,{children:["Written values are frozen when ",(0,l.jsx)(n.code,{children:"PACKAGE"})," file evaluation is finished."]}),"\n",(0,l.jsxs)(n.p,{children:["Note ",(0,l.jsx)(n.code,{children:"write_package_value"})," symbol exists in ",(0,l.jsx)(n.code,{children:"bzl"})," globals, and it can be called\nfrom ",(0,l.jsx)(n.code,{children:"bzl"})," file in context of ",(0,l.jsx)(n.code,{children:"PACKAGE"})," evaluation, but calling\n",(0,l.jsx)(n.code,{children:"write_package_file"})," is an error on context of ",(0,l.jsx)(n.code,{children:"BUCK"})," evaluation."]}),"\n",(0,l.jsxs)(n.p,{children:["Modifying ",(0,l.jsx)(n.code,{children:"PACKAGE"})," file logically invalidates the ",(0,l.jsx)(n.code,{children:"BUCK"})," file of this package,\nand all ",(0,l.jsx)(n.code,{children:"PACKAGE"})," and ",(0,l.jsx)(n.code,{children:"BUCK"})," files of subpackages. However, ",(0,l.jsx)(n.code,{children:"BUCK"})," file\nevaluation may track which package-local values were accessed and only\ninvalidate ",(0,l.jsx)(n.code,{children:"BUCK"})," files which were potentially affected (similarly to how we do\nit with buckconfigs, with individual properties being projection keys)."]}),"\n",(0,l.jsxs)(n.h4,{id:"buck-file-api",children:[(0,l.jsx)(n.code,{children:"BUCK"})," file API"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"BUCK"})," files (and ",(0,l.jsx)(n.code,{children:"bzl"})," files included from ",(0,l.jsx)(n.code,{children:"BUCK"})," files) have a global\nfunction:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:"def read_package_value(\n    name: str,\n): ...\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This function returns the nearest value registered per package, or ",(0,l.jsx)(n.code,{children:"None"})," is\nsuch value does not exist."]}),"\n",(0,l.jsxs)(n.p,{children:["This function is available in ",(0,l.jsx)(n.code,{children:"bzl"})," files, but attempt to call this function in\ncontext of ",(0,l.jsx)(n.code,{children:"PACKAGE"})," file evaluation results in an error. This restriction can\nbe lifted in the future."]}),"\n",(0,l.jsxs)(n.p,{children:["Per-package values are ",(0,l.jsx)(n.strong,{children:"not"})," accessible as global symbols in ",(0,l.jsx)(n.code,{children:"BUCK"})," files. We\nmay reconsider it in the future."]}),"\n",(0,l.jsx)(n.h3,{id:"read_config",children:(0,l.jsx)(n.code,{children:"read_config"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"PACKAGE"})," files may call ",(0,l.jsx)(n.code,{children:"read_config"})," function."]})]})}function h(e={}){const{wrapper:n}={...(0,i.useMDXComponents)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},15680:(e,n,r)=>{r.r(n),r.d(n,{MDXContext:()=>o,MDXProvider:()=>p,mdx:()=>j,useMDXComponents:()=>h,withMDXComponents:()=>d});var l=r(96540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(){return c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var l in r)Object.prototype.hasOwnProperty.call(r,l)&&(e[l]=r[l])}return e},c.apply(this,arguments)}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,l)}return r}function t(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,l,i=function(e,n){if(null==e)return{};var r,l,i={},c=Object.keys(e);for(l=0;l<c.length;l++)r=c[l],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(l=0;l<c.length;l++)r=c[l],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=l.createContext({}),d=function(e){return function(n){var r=h(n.components);return l.createElement(e,c({},n,{components:r}))}},h=function(e){var n=l.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):t(t({},n),e)),r},p=function(e){var n=h(e.components);return l.createElement(o.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},x=l.forwardRef((function(e,n){var r=e.components,i=e.mdxType,c=e.originalType,a=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=h(r),p=i,u=d["".concat(a,".").concat(p)]||d[p]||f[p]||c;return r?l.createElement(u,t(t({ref:n},o),{},{components:r})):l.createElement(u,t({ref:n},o))}));function j(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var c=r.length,a=new Array(c);a[0]=x;var t={};for(var s in n)hasOwnProperty.call(n,s)&&(t[s]=n[s]);t.originalType=e,t[u]="string"==typeof e?e:i,a[1]=t;for(var o=2;o<c;o++)a[o]=r[o];return l.createElement.apply(null,a)}return l.createElement.apply(null,r)}x.displayName="MDXCreateElement"}}]);